DevOps Interview Questions.

-------------------------------------------------------------------------------------------------------------------------------------------------
- In git, you can automate certain actions when the code merge or happens or when there is a push to origin. There are 3 types of triggers or hook?
----------------------------------------------------------------------------------------------------------------------------------------------
Automate builds using build triggers.                  
=====================================
    1. Timer [cronjob ] = build periodically  :
         run this job every mid night [database backup]  
         run this job every 2am [database backup] 
       Started by timer

    2. Changes in SCM via poll SCM  :
         * * * * * Every minute Jenkins will check for changes in the src to trigger a build  
         H * * * * Every hour Jenkins will check for changes in the src to trigger a build
         Software builds 
         application build and Deployment
         Started by an SCM change

    3. Changes in SCM via GitHub-webhook 
         GitHub will notify Jenkins to trigger a build once there is a change in the scm [src]  

        Jenkins Server url =  http://13.52.240.58:8080/
        GitHub-webhook     =  http://13.52.240.58:8080/github-webhook/   

         Software builds 
         application build and Deployment
         Started by GitHub push by legah2045 

         api call  

    4. Build other projects  
         Upstrean project  
           1. build & release  

           2. Downstream project 
                 deploy2Tomcat
-----------------------------------------------------------------------------------------------------
- Do you know what those triggers are? That will allow you to execute scripts when code is merged?
-------------------------------------------------------------------------------------------------
    1. Changes in SCM via GitHub-webhook 
         GitHub will notify Jenkins to trigger a build once there is a change in the scm [src]  

        Jenkins Server url =  http://13.52.240.58:8080/
        GitHub-webhook     =  http://13.52.240.58:8080/github-webhook/   

------------------------------------------------------------------------------------------------------------------------------------------------
- We often hear about CI/CD. When someone talks about Continuous Integration, what does that mean to you and how do you define the term to people?
-----------------------------------------------------------------------------------------------------------------------------------------------

    1. CI is nothing but a software development practice where members of each team integrate their work daily using automation, they can test it every day and it 
    reduces the problems because it can identify the problems earlier, so they can be fixed.. This will enable us to develop product that is  more stable. 

    2. CD (Continuous deployment) automatically deploys every successful CI build directly into production without any manual steps. 

-----------------------------------------------------------------------------------------------------------
- In DevOps, there is a concept called shift left to reduce failures. Do you know what that concept means?
------------------------------------------------------------------------------------------------------------

    The term “shift left” refers to a practice in software development in which teams focus on quality, work on problem prevention instead of detection, 
    and begin testing earlier than ever before. 
    Shifting left requires two key DevOps practices: continuous testing and continuous deployment. Continuous testing involves automating tests 
    and running those tests as early and often as possible, Continuous deployment automates the provisioning and deployment of new builds, 
    enabling continuous testing to happen quickly and efficiently.

---------------------------------------------------------------------------------------------------------------------------------------------
- In DevOps and Deployment practices, there is a practice called Blue Green deployment. Do you know what that is and can you explain that to me?
--------------------------------------------------------------------------------------------------------------------------------------------
    In a blue/green deployment strategy  the old version of the application and
    the new version get deployed at the same time. When both of these are deployed, users only have access to the
    green; whereas, the blue is available to the QA team for test automation on a separate service. After
    the new version has been tested and is signed off for release, the service is switched to the blue version with the
    old green version being scaled down:

-----------------------------------------------------------------------------------------------------
- Have you spent anytime building CI/CD pipelines and if so, what is the most complex one you have built?
-----------------------------------------------------------------------------------------------------
    one of my complex pipeline was when I created a pipeline for
    CP =  continous provisioning of our infrastructure using terraform
    CI =  Continous integration using 
          maven for validation, compilation, test and package.
          sonaqube for code quality 
          nexus to backup our artifact 
          and making use of jenkins library in our pipeline
    CD =  pipeline for deploying our application into kubernetes cluster ( kubectl apply -f by importing kubeconfig file in our jenkins server)
    CM =  pipeline for deploying monitoring like prometheus and grafana using helm chart 
-----------------------------------------------------------------------------------------------------------------------------------------------------------
- Scripting or programming skills, have you done any work with Java, Python, Bash shell scripting or Pearl, any type of scripting language or light programming? 
-------------------------------------------------------------------------------------------------------------------------------------------------------------
    YES Bash shell script
    
------------------------------------------------------------------------------------------------------------------------------------------    
- Tell me about a time you had to write a script, you had a problem, you needed to find a solution, you wrote a script to solve the problem? 
  What was that situation and the script you wrote?
--------------------------------------------------------------------------------------------------------------------------------
    some years ago before we started using new relic for monitoring our monolitic application, I created a script that monitors resources in our server
    using bash shell scripting
    
    --Bash script
    THRESHOLD=85
    df -H | grep -vE '^Filesystem|tmpfs|cdrom' | awk '{ print $5 " " $1 }' | while read output;
    do
      echo $output
      usep=$(echo $output | awk '{ print $1}' | cut -d'%' -f1  )
      partition=$(echo $output | awk '{ print $2 }' )
      if [ $usep -ge $THRESHOLD ]; then
        echo "Running out of memory space \"$partition ($usep%)\" on $(hostname) as on $(date)" |
         mail -s "Alert: Almost out of disk space $usep%" mylandmarktech@gmail.com
      fi
    done
-----------------------------------------------------------------------------------------------------------------------------
- Have you done any work with monitoring tools like Grafana, Prometheus, Elastic Search, New Relic, Data Dog, anything working with tools 
  and dashboard to help build monitoring solutions? Can you tell me a little bit of the work you did with that?
-------------------------------------------------------------------------------------------------------------------------
    I have deployed prometheus and grafana using helm chart in a kubernetes clusters like  
     -- Prometheus and Grafana = APM
            and this comes with
            kube state metrics - which collect/scraps data from pod/deployment
            node exporter -which collect/scrapes data from memory, cpu/disk
            Alert manager -in charge alert us when something goes wrong
            grafana- visualisation
    --  EFK/ELK - LogMGT and data Analytics
        I have also deployed elastic search, file beat and kibana using helm in a kubernetes clusters like       
            .File beat collects data from the log files and sends it to logstash.
            .Logstash enhances the data and sends it to elastic search.
            .Elastic search stores and indexes the data.
            .Kibana displays the data stored in elastic search
-------------------------------------------
- How have you used github in your environment?
-------------------------------------------
    Yes, we use github in our environment to store our repo and for collaboration. I have used github to

    1.CREATE ORGANISATIONS WHERE APPLICABLE 
    2.CREATE REPOSITORIES IN GITHUB 
    3.CREATE TEAMS IN Github AND ASSIGN MEMBERS to teams 
    4.GRANT REPO ACCESS/PERMISSION TO THE TEAM AND ENSURING THEY GET PERMISSIONS FOR WHAT THEY NEED TO CARRYOUT THEIR JOB ONLY
-------------------------------------
- How do you manage secrets in github? ----
--------------------------------------
    we manage secret in github by passing credentials using secret in github and inputing the value and then using 
    it in our repo as environmental variable.
    
---------------------------
What are your KPI meterics?
---------------------------

    1. Keep the failure rate for application changes and releases deployed into production as low as possible.
    2. Ensuring that Service-level agreements (SLA) for our applications meet a high goal of availability. Services should be online as much as possible, 
       which creates uptime goals as high as 99.999%, we achieve this by continous monitoring 
    3. Ensuring continous security in our environment
